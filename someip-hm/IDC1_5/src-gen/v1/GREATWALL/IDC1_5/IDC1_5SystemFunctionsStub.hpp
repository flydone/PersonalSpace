/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202002200719.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_IDC1_5_IDC1_5_System_Functions_STUB_HPP_
#define V1_GREATWALL_IDC1_5_IDC1_5_System_Functions_STUB_HPP_

#include <functional>
#include <sstream>




#include <v1/GREATWALL/IDC1_5/IDC1_5SystemFunctions.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <unordered_set>
#include <vector>


#include <CommonAPI/Stub.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace IDC1_5 {

/**
 * Receives messages from remote and handles all dispatching of deserialized calls
 * to a stub for the service IDC1_5SystemFunctions. Also provides means to send broadcasts
 * and attribute-changed-notifications of observable attributes as defined by this service.
 * An application developer should not need to bother with this class.
 */
class IDC1_5SystemFunctionsStubAdapter
    : public virtual CommonAPI::StubAdapter,
      public virtual IDC1_5SystemFunctions {
 public:

    /**
    * Sends a broadcast event for VideoUpload. Should not be called directly.
    * Instead, the "fire<broadcastName>Event" methods of the stub should be used.
    */
    virtual void fireVideoUploadEvent(const ::v1::GREATWALL::IDC1_5::IDC1_5SystemFunctions::DataCollectTriggerStruct &_DataCollectTriggerStruct) = 0;


    virtual void deactivateManagedInstances() = 0;


protected:
    /**
     * Defines properties for storing the ClientIds of clients / proxies that have
     * subscribed to the selective broadcasts
     */

};

/**
 * Defines the necessary callbacks to handle remote set events related to the attributes
 * defined in the IDL description for IDC1_5SystemFunctions.
 * For each attribute two callbacks are defined:
 * - a verification callback that allows to verify the requested value and to prevent setting
 *   e.g. an invalid value ("onRemoteSet<AttributeName>").
 * - an action callback to do local work after the attribute value has been changed
 *   ("onRemote<AttributeName>Changed").
 *
 * This class and the one below are the ones an application developer needs to have
 * a look at if he wants to implement a service.
 */
class IDC1_5SystemFunctionsStubRemoteEvent
{
public:
    virtual ~IDC1_5SystemFunctionsStubRemoteEvent() { }

};

/**
 * Defines the interface that must be implemented by any class that should provide
 * the service IDC1_5SystemFunctions to remote clients.
 * This class and the one above are the ones an application developer needs to have
 * a look at if he wants to implement a service.
 */
class IDC1_5SystemFunctionsStub
    : public virtual CommonAPI::Stub<IDC1_5SystemFunctionsStubAdapter, IDC1_5SystemFunctionsStubRemoteEvent>
{
public:

    virtual ~IDC1_5SystemFunctionsStub() {}
    virtual const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> clientId) = 0;
    void lockInterfaceVersionAttribute(bool _lockAccess) { static_cast<void>(_lockAccess); }


    /// Sends a broadcast event for VideoUpload.
    virtual void fireVideoUploadEvent(const ::v1::GREATWALL::IDC1_5::IDC1_5SystemFunctions::DataCollectTriggerStruct &_DataCollectTriggerStruct) {
        auto stubAdapter = CommonAPI::Stub<IDC1_5SystemFunctionsStubAdapter, IDC1_5SystemFunctionsStubRemoteEvent>::stubAdapter_.lock();
        if (stubAdapter)
            stubAdapter->fireVideoUploadEvent(_DataCollectTriggerStruct);
    }

    
    using CommonAPI::Stub<IDC1_5SystemFunctionsStubAdapter, IDC1_5SystemFunctionsStubRemoteEvent>::initStubAdapter;
    typedef CommonAPI::Stub<IDC1_5SystemFunctionsStubAdapter, IDC1_5SystemFunctionsStubRemoteEvent>::StubAdapterType StubAdapterType;
    typedef CommonAPI::Stub<IDC1_5SystemFunctionsStubAdapter, IDC1_5SystemFunctionsStubRemoteEvent>::RemoteEventHandlerType RemoteEventHandlerType;
    typedef IDC1_5SystemFunctionsStubRemoteEvent RemoteEventType;
    typedef IDC1_5SystemFunctions StubInterface;
};

} // namespace IDC1_5
} // namespace GREATWALL
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_GREATWALL_IDC1_5_IDC1_5_System_Functions_STUB_HPP_
