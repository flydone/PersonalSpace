/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v202002200807.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/GREATWALL/IDC_L2_IDC1_5_IDC3_0_MDC_A/IDC_L2SystemFunctionsSomeIPStubAdapter.hpp>
#include <v1/GREATWALL/IDC_L2_IDC1_5_IDC3_0_MDC_A/IDC_L2SystemFunctions.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace IDC_L2_IDC1_5_IDC3_0_MDC_A {

std::shared_ptr<CommonAPI::SomeIP::StubAdapter> createIDC_L2SystemFunctionsSomeIPStubAdapter(
                   const CommonAPI::SomeIP::Address &_address,
                   const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
                   const std::shared_ptr<CommonAPI::StubBase> &_stub) {
    return std::make_shared< IDC_L2SystemFunctionsSomeIPStubAdapter<::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub>>(_address, _connection, _stub);
}

void initializeIDC_L2SystemFunctionsSomeIPStubAdapter() {
    CommonAPI::SomeIP::AddressTranslator::get()->insert(
        "local:GREATWALL.IDC_L2_IDC1_5_IDC3_0_MDC_A.IDC_L2SystemFunctions:v1_0:IDC_L2SystemFunctions01",
         0xa01, 0x1, 1, 0);
    CommonAPI::SomeIP::Factory::get()->registerStubAdapterCreateMethod(
        IDC_L2SystemFunctions::getInterface(),
        &createIDC_L2SystemFunctionsSomeIPStubAdapter);
}

INITIALIZER(registerIDC_L2SystemFunctionsSomeIPStubAdapter) {
    CommonAPI::SomeIP::Factory::get()->registerInterface(initializeIDC_L2SystemFunctionsSomeIPStubAdapter);
}
} // namespace IDC_L2_IDC1_5_IDC3_0_MDC_A
} // namespace GREATWALL
} // namespace v1
