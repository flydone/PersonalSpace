/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v202002200807.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_IDC_L2_IDC1_5_IDC3_0_MDC_A_IDC__L2_SYSTEM_FUNCTIONS_SOMEIP_STUB_ADAPTER_HPP_
#define V1_GREATWALL_IDC_L2_IDC1_5_IDC3_0_MDC_A_IDC__L2_SYSTEM_FUNCTIONS_SOMEIP_STUB_ADAPTER_HPP_

#include <v1/GREATWALL/IDC_L2_IDC1_5_IDC3_0_MDC_A/IDC_L2SystemFunctionsStub.hpp>
#include <v1/GREATWALL/IDC_L2_IDC1_5_IDC3_0_MDC_A/IDC_L2SystemFunctionsSomeIPDeployment.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>
#include <CommonAPI/SomeIP/StubAdapterHelper.hpp>
#include <CommonAPI/SomeIP/StubAdapter.hpp>
#include <CommonAPI/SomeIP/Factory.hpp>
#include <CommonAPI/SomeIP/Types.hpp>
#include <CommonAPI/SomeIP/Constants.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace IDC_L2_IDC1_5_IDC3_0_MDC_A {

template <typename _Stub = ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub, typename... _Stubs>
class IDC_L2SystemFunctionsSomeIPStubAdapterInternal
    : public virtual IDC_L2SystemFunctionsStubAdapter,
      public CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...>
{
public:
    typedef CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...> IDC_L2SystemFunctionsSomeIPStubAdapterHelper;

    ~IDC_L2SystemFunctionsSomeIPStubAdapterInternal() {
        deactivateManagedInstances();
        IDC_L2SystemFunctionsSomeIPStubAdapterHelper::deinit();
    }

    void fireLocationInfoDataAttributeChanged(const ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::LocationInfoStruct& value);

    void fireOBJPptyInfoDataAttributeChanged(const ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::OBJPptyInfoStruct& value);

    void deactivateManagedInstances() {
    }

    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub,
        CommonAPI::Version
    > getIDC_L2SystemFunctionsInterfaceVersionStubDispatcher;

    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub,
        ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::LocationInfoStruct,
        ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::LocationInfoStructDeployment_t
    > getLocationInfoDataAttributeStubDispatcher;
    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub,
        ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::OBJPptyInfoStruct,
        ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::OBJPptyInfoStructDeployment_t
    > getOBJPptyInfoDataAttributeStubDispatcher;


    IDC_L2SystemFunctionsSomeIPStubAdapterInternal(
        const CommonAPI::SomeIP::Address &_address,
        const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub):
        CommonAPI::SomeIP::StubAdapter(_address, _connection),
        IDC_L2SystemFunctionsSomeIPStubAdapterHelper(
            _address,
            _connection,
            std::dynamic_pointer_cast< IDC_L2SystemFunctionsStub>(_stub))
    {

                IDC_L2SystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x0) }, &getLocationInfoDataAttributeStubDispatcher );
                IDC_L2SystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x0) }, &getOBJPptyInfoDataAttributeStubDispatcher );
        
        std::shared_ptr<CommonAPI::SomeIP::ClientId> clientId = std::make_shared<CommonAPI::SomeIP::ClientId>(0xFFFF);

        // Provided events/fields
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(CommonAPI::SomeIP::eventgroup_id_t(0x1)));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x9001), itsEventGroups, true);
            fireLocationInfoDataAttributeChanged(std::dynamic_pointer_cast< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub>(_stub)->getLocationInfoDataAttribute(clientId));
        }

        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(CommonAPI::SomeIP::eventgroup_id_t(0x4)));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x9004), itsEventGroups, true);
            fireOBJPptyInfoDataAttributeChanged(std::dynamic_pointer_cast< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub>(_stub)->getOBJPptyInfoDataAttribute(clientId));
        }

    }

private:
};

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub,
    CommonAPI::Version
    > IDC_L2SystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::getIDC_L2SystemFunctionsInterfaceVersionStubDispatcher(&IDC_L2SystemFunctionsStub::lockInterfaceVersionAttribute, &IDC_L2SystemFunctionsStub::getInterfaceVersion, false);

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub,
    ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::LocationInfoStruct,
    ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::LocationInfoStructDeployment_t
> IDC_L2SystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::getLocationInfoDataAttributeStubDispatcher(
    &IDC_L2SystemFunctionsStub::lockLocationInfoDataAttribute,
    &IDC_L2SystemFunctionsStub::getLocationInfoDataAttribute, false);

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub,
    ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::OBJPptyInfoStruct,
    ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::OBJPptyInfoStructDeployment_t
> IDC_L2SystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::getOBJPptyInfoDataAttributeStubDispatcher(
    &IDC_L2SystemFunctionsStub::lockOBJPptyInfoDataAttribute,
    &IDC_L2SystemFunctionsStub::getOBJPptyInfoDataAttribute, false, &::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::OBJPptyInfoStructDeployment);

template <typename _Stub, typename... _Stubs>
void IDC_L2SystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireLocationInfoDataAttributeChanged(const ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::LocationInfoStruct& value) {
    CommonAPI::Deployable< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::LocationInfoStruct, ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::LocationInfoStructDeployment_t> deployedValue(value, static_cast< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::LocationInfoStructDeployment_t* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<
        CommonAPI::SomeIP::SerializableArguments<
            CommonAPI::Deployable<
                ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::LocationInfoStruct,
                ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::LocationInfoStructDeployment_t
            >
            >
    >::sendEvent(
        *this,
        CommonAPI::SomeIP::event_id_t(0x9001),
        false,
        deployedValue
    );
}

template <typename _Stub, typename... _Stubs>
void IDC_L2SystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireOBJPptyInfoDataAttributeChanged(const ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::OBJPptyInfoStruct& value) {
    CommonAPI::Deployable< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::OBJPptyInfoStruct, ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::OBJPptyInfoStructDeployment_t> deployedValue(value, &::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::OBJPptyInfoStructDeployment);
    CommonAPI::SomeIP::StubEventHelper<
        CommonAPI::SomeIP::SerializableArguments<
            CommonAPI::Deployable<
                ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions::OBJPptyInfoStruct,
                ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::OBJPptyInfoStructDeployment_t
            >
            >
    >::sendEvent(
        *this,
        CommonAPI::SomeIP::event_id_t(0x9004),
        false,
        deployedValue
    );
}

template <typename _Stub = ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctionsStub, typename... _Stubs>
class IDC_L2SystemFunctionsSomeIPStubAdapter
    : public IDC_L2SystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>,
      public std::enable_shared_from_this< IDC_L2SystemFunctionsSomeIPStubAdapter<_Stub, _Stubs...>> {
public:
    IDC_L2SystemFunctionsSomeIPStubAdapter(const CommonAPI::SomeIP::Address &_address,
                                            const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
                                            const std::shared_ptr<CommonAPI::StubBase> &_stub)
        : CommonAPI::SomeIP::StubAdapter(_address, _connection),
          IDC_L2SystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>(_address, _connection, _stub) {
    }
};

} // namespace IDC_L2_IDC1_5_IDC3_0_MDC_A
} // namespace GREATWALL
} // namespace v1

#endif // V1_GREATWALL_IDC_L2_IDC1_5_IDC3_0_MDC_A_IDC__L2_System_Functions_SOMEIP_STUB_ADAPTER_HPP_
