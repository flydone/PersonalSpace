/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v202002200807.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/GREATWALL/IDC_L2_IDC1_5_IDC3_0_MDC_A/ADASDisplayInformationSomeIPProxy.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace IDC_L2_IDC1_5_IDC3_0_MDC_A {

std::shared_ptr<CommonAPI::SomeIP::Proxy> createADASDisplayInformationSomeIPProxy(
    const CommonAPI::SomeIP::Address &_address,
    const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection) {
    return std::make_shared< ADASDisplayInformationSomeIPProxy>(_address, _connection);
}

void initializeADASDisplayInformationSomeIPProxy() {
    CommonAPI::SomeIP::AddressTranslator::get()->insert(
        "local:GREATWALL.IDC_L2_IDC1_5_IDC3_0_MDC_A.ADASDisplayInformation:v1_0:ADASDisplayInformation01",
        0xc02, 0x1, 1, 0);
     CommonAPI::SomeIP::Factory::get()->registerProxyCreateMethod(
         ADASDisplayInformation::getInterface(),
         &createADASDisplayInformationSomeIPProxy);
}

INITIALIZER(registerADASDisplayInformationSomeIPProxy) {
    CommonAPI::SomeIP::Factory::get()->registerInterface(initializeADASDisplayInformationSomeIPProxy);
}

ADASDisplayInformationSomeIPProxy::ADASDisplayInformationSomeIPProxy(
    const CommonAPI::SomeIP::Address &_address,
    const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection)
        : CommonAPI::SomeIP::Proxy(_address, _connection )
,          locationDisp_(*this, 0x1, CommonAPI::SomeIP::event_id_t(0x8002), false, false, std::make_tuple(static_cast< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::ADASDisplayInformation_::LaneChangeZoneDeployment_t* >(nullptr))),
          guideLineCoordinate_(*this, 0x1, CommonAPI::SomeIP::event_id_t(0x8001), false, false, std::make_tuple(static_cast< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::ADASDisplayInformation_::Guide_Line_Points_ArrayDeployment_t* >(nullptr)))
    {
    }


    ADASDisplayInformationSomeIPProxy::LocationDispEvent& ADASDisplayInformationSomeIPProxy::getLocationDispEvent() {
        return locationDisp_;
    }
    ADASDisplayInformationSomeIPProxy::GuideLineCoordinateEvent& ADASDisplayInformationSomeIPProxy::getGuideLineCoordinateEvent() {
        return guideLineCoordinate_;
    }




    void ADASDisplayInformationSomeIPProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
    ownVersionMajor = 1;
    ownVersionMinor = 0;
    }

} // namespace IDC_L2_IDC1_5_IDC3_0_MDC_A
} // namespace GREATWALL
} // namespace v1
