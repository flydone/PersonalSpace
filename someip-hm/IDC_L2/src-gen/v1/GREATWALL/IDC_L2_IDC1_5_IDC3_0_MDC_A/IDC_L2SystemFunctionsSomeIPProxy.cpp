/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v202002200807.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/GREATWALL/IDC_L2_IDC1_5_IDC3_0_MDC_A/IDC_L2SystemFunctionsSomeIPProxy.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace IDC_L2_IDC1_5_IDC3_0_MDC_A {

std::shared_ptr<CommonAPI::SomeIP::Proxy> createIDC_L2SystemFunctionsSomeIPProxy(
    const CommonAPI::SomeIP::Address &_address,
    const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection) {
    return std::make_shared< IDC_L2SystemFunctionsSomeIPProxy>(_address, _connection);
}

void initializeIDC_L2SystemFunctionsSomeIPProxy() {
    CommonAPI::SomeIP::AddressTranslator::get()->insert(
        "local:GREATWALL.IDC_L2_IDC1_5_IDC3_0_MDC_A.IDC_L2SystemFunctions:v1_0:IDC_L2SystemFunctions01",
        0xa01, 0x1, 1, 0);
     CommonAPI::SomeIP::Factory::get()->registerProxyCreateMethod(
         IDC_L2SystemFunctions::getInterface(),
         &createIDC_L2SystemFunctionsSomeIPProxy);
}

INITIALIZER(registerIDC_L2SystemFunctionsSomeIPProxy) {
    CommonAPI::SomeIP::Factory::get()->registerInterface(initializeIDC_L2SystemFunctionsSomeIPProxy);
}

IDC_L2SystemFunctionsSomeIPProxy::IDC_L2SystemFunctionsSomeIPProxy(
    const CommonAPI::SomeIP::Address &_address,
    const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection)
        : CommonAPI::SomeIP::Proxy(_address, _connection )
,          locationInfoData_(*this, CommonAPI::SomeIP::eventgroup_id_t(0x1), CommonAPI::SomeIP::event_id_t(0x9001), CommonAPI::SomeIP::method_id_t(0x0), false, false, static_cast< ::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::LocationInfoStructDeployment_t* >(nullptr)),
          oBJPptyInfoData_(*this, CommonAPI::SomeIP::eventgroup_id_t(0x4), CommonAPI::SomeIP::event_id_t(0x9004), CommonAPI::SomeIP::method_id_t(0x0), false, false, &::v1::GREATWALL::IDC_L2_IDC1_5_IDC3_0_MDC_A::IDC_L2SystemFunctions_::OBJPptyInfoStructDeployment)
    {
    }

    IDC_L2SystemFunctionsSomeIPProxy::LocationInfoDataAttribute& IDC_L2SystemFunctionsSomeIPProxy::getLocationInfoDataAttribute() {
        return locationInfoData_;
    }
    IDC_L2SystemFunctionsSomeIPProxy::OBJPptyInfoDataAttribute& IDC_L2SystemFunctionsSomeIPProxy::getOBJPptyInfoDataAttribute() {
        return oBJPptyInfoData_;
    }





    void IDC_L2SystemFunctionsSomeIPProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
    ownVersionMajor = 1;
    ownVersionMinor = 0;
    }

} // namespace IDC_L2_IDC1_5_IDC3_0_MDC_A
} // namespace GREATWALL
} // namespace v1
