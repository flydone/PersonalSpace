/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202002200719.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/GREATWALL_MDC_A_IDC1_5_IDC3_0_HAP/HAVPandAVPFunctionsStubDefault.hpp>
#include <assert.h>

namespace v1 {
namespace GREATWALL_MDC_A_IDC1_5_IDC3_0_HAP {

HAVPandAVPFunctionsStubDefault::HAVPandAVPFunctionsStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(HAVPandAVPFunctions::getInterfaceVersion()) {
}

const CommonAPI::Version& HAVPandAVPFunctionsStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client) {
    (void)_client;
    return interfaceVersion_;
}

HAVPandAVPFunctionsStubRemoteEvent* HAVPandAVPFunctionsStubDefault::initStubAdapter(const std::shared_ptr< HAVPandAVPFunctionsStubAdapter> &_adapter) {
    CommonAPI::Stub<HAVPandAVPFunctionsStubAdapter, HAVPandAVPFunctionsStubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}



void HAVPandAVPFunctionsStubDefault::fireHAVPPathInfoEvent(const ::v1::GREATWALL_MDC_A_IDC1_5_IDC3_0_HAP::HAVPandAVPFunctions::HAVPLearningWorldArray &_HAVPLearningWorldArray) {
    HAVPandAVPFunctionsStub::fireHAVPPathInfoEvent(_HAVPLearningWorldArray);
}
void HAVPandAVPFunctionsStubDefault::fireHAVPRendergInfoEvent(const ::v1::GREATWALL_MDC_A_IDC1_5_IDC3_0_HAP::HAVPandAVPFunctions::HAVPVehDataArray &_HAVPVehDataArray) {
    HAVPandAVPFunctionsStub::fireHAVPRendergInfoEvent(_HAVPVehDataArray);
}
void HAVPandAVPFunctionsStubDefault::fireHAVPPathMapEvent(const ::v1::GREATWALL_MDC_A_IDC1_5_IDC3_0_HAP::HAVPandAVPFunctions::HAVPMapFileArray &_HAVPMapFileArray) {
    HAVPandAVPFunctionsStub::fireHAVPPathMapEvent(_HAVPMapFileArray);
}


HAVPandAVPFunctionsStubDefault::RemoteEventHandler::RemoteEventHandler(HAVPandAVPFunctionsStubDefault *_defaultStub)
    : 
      defaultStub_(_defaultStub) {
}

} // namespace GREATWALL_MDC_A_IDC1_5_IDC3_0_HAP
} // namespace v1
