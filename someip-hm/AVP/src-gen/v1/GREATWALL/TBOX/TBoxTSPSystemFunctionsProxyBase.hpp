/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202002200719.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_TBOX_T_Box_TSP_System_Functions_PROXY_BASE_HPP_
#define V1_GREATWALL_TBOX_T_Box_TSP_System_Functions_PROXY_BASE_HPP_

#include <v1/GREATWALL/TBOX/TBoxTSPSystemFunctions.hpp>



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <cstdint>
#include <string>
#include <vector>

#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace TBOX {

class TBoxTSPSystemFunctionsProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxTSPSystemFunctions::StsResponse
    > StsResponseEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxTSPSystemFunctions::StsContent
    > StsContentEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxTSPSystemFunctions::RegisterContent
    > RegisterContentEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxTSPSystemFunctions::RegisterResponse
    > RegisterResponseEvent;



    virtual StsResponseEvent& getStsResponseEvent() = 0;
    virtual StsContentEvent& getStsContentEvent() = 0;
    virtual RegisterContentEvent& getRegisterContentEvent() = 0;
    virtual RegisterResponseEvent& getRegisterResponseEvent() = 0;

    /**
     * @invariant Fire And Forget
     */
    virtual void StsRequest(const TBoxTSPSystemFunctions::StsRequest &_StsRequest, CommonAPI::CallStatus &_internalCallStatus) = 0;
    /**
     * @invariant Fire And Forget
     */
    virtual void RegisterRequest(const TBoxTSPSystemFunctions::RegisterRequest &_RegisterRequest, CommonAPI::CallStatus &_internalCallStatus) = 0;
};

} // namespace TBOX
} // namespace GREATWALL
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_GREATWALL_TBOX_T_Box_TSP_System_Functions_PROXY_BASE_HPP_
