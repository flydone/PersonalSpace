/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v202002200807.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_DVR_VIMS_DVR_FILE_OPERATION_SOMEIP_STUB_ADAPTER_HPP_
#define V1_GREATWALL_DVR_VIMS_DVR_FILE_OPERATION_SOMEIP_STUB_ADAPTER_HPP_

#include <v1/GREATWALL/DVR_VIMS/DVRFileOperationStub.hpp>
#include <v1/GREATWALL/DVR_VIMS/DVRFileOperationSomeIPDeployment.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>
#include <CommonAPI/SomeIP/StubAdapterHelper.hpp>
#include <CommonAPI/SomeIP/StubAdapter.hpp>
#include <CommonAPI/SomeIP/Factory.hpp>
#include <CommonAPI/SomeIP/Types.hpp>
#include <CommonAPI/SomeIP/Constants.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace DVR_VIMS {

template <typename _Stub = ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub, typename... _Stubs>
class DVRFileOperationSomeIPStubAdapterInternal
    : public virtual DVRFileOperationStubAdapter,
      public CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...>
{
public:
    typedef CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...> DVRFileOperationSomeIPStubAdapterHelper;

    ~DVRFileOperationSomeIPStubAdapterInternal() {
        deactivateManagedInstances();
        DVRFileOperationSomeIPStubAdapterHelper::deinit();
    }

    void deactivateManagedInstances() {
    }

    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        CommonAPI::Version
    > getDVRFileOperationInterfaceVersionStubDispatcher;


    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType>,
        std::tuple< DVRFileOperation::SetResult>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
    > allFileDeleteRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::FileType, DVRFileOperation::AccessType, DVRFileOperation::FileNumber, DVRFileOperation::FileName>,
        std::tuple< DVRFileOperation::FileListStructArray>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint8_t>, CommonAPI::SomeIP::StringDeployment>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListStructArrayDeployment_t>
    > fileListRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::ExportMode, DVRFileOperation::AccessType, DVRFileOperation::FileType>,
        std::tuple< DVRFileOperation::ExportFileACK>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportModeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportFileACKDeployment_t>
    > allFileExportRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::ExportMode, DVRFileOperation::FileListPath>,
        std::tuple< DVRFileOperation::ExportFileACK>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportModeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportFileACKDeployment_t>
    > fileExportRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType>,
        std::tuple< DVRFileOperation::SetResult>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
    > asyncAllFileDeleteRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::TFAllFileCapacity_Enum, DVRFileOperation::TFCardFileTypeList_Array>,
        std::tuple< DVRFileOperation::FileCapacityList_Array>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFAllFileCapacity_EnumDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardFileTypeList_ArrayDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileCapacityList_ArrayDeployment_t>
    > dVRFileCapacityInfoReqStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::SDCardOption>,
        std::tuple< DVRFileOperation::SetResult>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SDCardOptionDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
    > sDCardFormatStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::AccessType>,
        std::tuple< DVRFileOperation::SetResult>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
    > startVideoBrowseStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::FileType, DVRFileOperation::AccessType, DVRFileOperation::FileNumber, DVRFileOperation::FileName>,
        std::tuple< DVRFileOperation::FileListIncludeDate_Array>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint8_t>, CommonAPI::SomeIP::StringDeployment>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListIncludeDate_ArrayDeployment_t>
    > fileListIncludeDateReqStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::FileListPath>,
        std::tuple< DVRFileOperation::SetResult>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
    > fileDeleteRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::GetAllInfo, DVRFileOperation::TFCardOptionList>,
        std::tuple< DVRFileOperation::TFCardInfoList>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::GetAllInfoDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardOptionListDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardInfoListDeployment_t>
    > tFCardInfoQueryStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::FileListPath>,
        std::tuple< DVRFileOperation::SetResult, DVRFileOperation::FileCapacity>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint32_t>>
    > selectFileCapacityRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::GetAllInfo>,
        std::tuple< DVRFileOperation::EMMCStatus, DVRFileOperation::EMMCCapacityStruct>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::GetAllInfoDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EMMCStatusDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EMMCCapacityStructDeployment_t>
    > eMMCInfoQueryStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::AccessType>,
        std::tuple< DVRFileOperation::SetResult>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
    > stopVideoBrowseStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType>,
        std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType, DVRFileOperation::SelectAllFileCapacity>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint32_t>>
    > selectAllFileCapacityRequestStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
        std::tuple< DVRFileOperation::AccessType>,
        std::tuple< DVRFileOperation::RecordStatus, DVRFileOperation::EventType>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t>,
        std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::RecordStatusDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EventTypeDeployment_t>
    > recordEventStatusRequestStubDispatcher;

    DVRFileOperationSomeIPStubAdapterInternal(
        const CommonAPI::SomeIP::Address &_address,
        const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub):
        CommonAPI::SomeIP::StubAdapter(_address, _connection),
        DVRFileOperationSomeIPStubAdapterHelper(
            _address,
            _connection,
            std::dynamic_pointer_cast< DVRFileOperationStub>(_stub))
    {

        
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0xb) }, &allFileDeleteRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x3) }, &fileListRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0xd) }, &allFileExportRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x7) }, &fileExportRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x10) }, &asyncAllFileDeleteRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x11) }, &dVRFileCapacityInfoReqStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x4) }, &sDCardFormatStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x1) }, &startVideoBrowseStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x12) }, &fileListIncludeDateReqStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x5) }, &fileDeleteRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x6) }, &tFCardInfoQueryStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0xe) }, &selectFileCapacityRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x8) }, &eMMCInfoQueryStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x2) }, &stopVideoBrowseStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0xc) }, &selectAllFileCapacityRequestStubDispatcher );
                DVRFileOperationSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0xf) }, &recordEventStatusRequestStubDispatcher );
        // Provided events/fields
    }

private:
};

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    CommonAPI::Version
    > DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::getDVRFileOperationInterfaceVersionStubDispatcher(&DVRFileOperationStub::lockInterfaceVersionAttribute, &DVRFileOperationStub::getInterfaceVersion, false);

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType>,
    std::tuple< DVRFileOperation::SetResult>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::allFileDeleteRequestStubDispatcher(
    &DVRFileOperationStub::AllFileDeleteRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::FileType, DVRFileOperation::AccessType, DVRFileOperation::FileNumber, DVRFileOperation::FileName>,
    std::tuple< DVRFileOperation::FileListStructArray>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint8_t>, CommonAPI::SomeIP::StringDeployment>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListStructArrayDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::fileListRequestStubDispatcher(
    &DVRFileOperationStub::FileListRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr), static_cast< CommonAPI::SomeIP::IntegerDeployment<uint8_t>* >(nullptr), static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr)),
    std::make_tuple(&::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListStructArrayDeployment));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::ExportMode, DVRFileOperation::AccessType, DVRFileOperation::FileType>,
    std::tuple< DVRFileOperation::ExportFileACK>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportModeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportFileACKDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::allFileExportRequestStubDispatcher(
    &DVRFileOperationStub::AllFileExportRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportModeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportFileACKDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::ExportMode, DVRFileOperation::FileListPath>,
    std::tuple< DVRFileOperation::ExportFileACK>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportModeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportFileACKDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::fileExportRequestStubDispatcher(
    &DVRFileOperationStub::FileExportRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportModeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::ExportFileACKDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType>,
    std::tuple< DVRFileOperation::SetResult>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::asyncAllFileDeleteRequestStubDispatcher(
    &DVRFileOperationStub::AsyncAllFileDeleteRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::TFAllFileCapacity_Enum, DVRFileOperation::TFCardFileTypeList_Array>,
    std::tuple< DVRFileOperation::FileCapacityList_Array>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFAllFileCapacity_EnumDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardFileTypeList_ArrayDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileCapacityList_ArrayDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::dVRFileCapacityInfoReqStubDispatcher(
    &DVRFileOperationStub::DVRFileCapacityInfoReq,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFAllFileCapacity_EnumDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardFileTypeList_ArrayDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileCapacityList_ArrayDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::SDCardOption>,
    std::tuple< DVRFileOperation::SetResult>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SDCardOptionDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::sDCardFormatStubDispatcher(
    &DVRFileOperationStub::SDCardFormat,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SDCardOptionDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::AccessType>,
    std::tuple< DVRFileOperation::SetResult>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::startVideoBrowseStubDispatcher(
    &DVRFileOperationStub::StartVideoBrowse,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::FileType, DVRFileOperation::AccessType, DVRFileOperation::FileNumber, DVRFileOperation::FileName>,
    std::tuple< DVRFileOperation::FileListIncludeDate_Array>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint8_t>, CommonAPI::SomeIP::StringDeployment>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListIncludeDate_ArrayDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::fileListIncludeDateReqStubDispatcher(
    &DVRFileOperationStub::FileListIncludeDateReq,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr), static_cast< CommonAPI::SomeIP::IntegerDeployment<uint8_t>* >(nullptr), static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr)),
    std::make_tuple(&::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListIncludeDate_ArrayDeployment));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::FileListPath>,
    std::tuple< DVRFileOperation::SetResult>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::fileDeleteRequestStubDispatcher(
    &DVRFileOperationStub::FileDeleteRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::GetAllInfo, DVRFileOperation::TFCardOptionList>,
    std::tuple< DVRFileOperation::TFCardInfoList>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::GetAllInfoDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardOptionListDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardInfoListDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::tFCardInfoQueryStubDispatcher(
    &DVRFileOperationStub::TFCardInfoQuery,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::GetAllInfoDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardOptionListDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::TFCardInfoListDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::FileListPath>,
    std::tuple< DVRFileOperation::SetResult, DVRFileOperation::FileCapacity>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint32_t>>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::selectFileCapacityRequestStubDispatcher(
    &DVRFileOperationStub::SelectFileCapacityRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileListPathDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t* >(nullptr), static_cast< CommonAPI::SomeIP::IntegerDeployment<uint32_t>* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::GetAllInfo>,
    std::tuple< DVRFileOperation::EMMCStatus, DVRFileOperation::EMMCCapacityStruct>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::GetAllInfoDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EMMCStatusDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EMMCCapacityStructDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::eMMCInfoQueryStubDispatcher(
    &DVRFileOperationStub::EMMCInfoQuery,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::GetAllInfoDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EMMCStatusDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EMMCCapacityStructDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::AccessType>,
    std::tuple< DVRFileOperation::SetResult>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::stopVideoBrowseStubDispatcher(
    &DVRFileOperationStub::StopVideoBrowse,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::SetResultDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType>,
    std::tuple< DVRFileOperation::AccessType, DVRFileOperation::FileType, DVRFileOperation::SelectAllFileCapacity>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t, CommonAPI::SomeIP::IntegerDeployment<uint32_t>>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::selectAllFileCapacityRequestStubDispatcher(
    &DVRFileOperationStub::SelectAllFileCapacityRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::FileTypeDeployment_t* >(nullptr), static_cast< CommonAPI::SomeIP::IntegerDeployment<uint32_t>* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub,
    std::tuple< DVRFileOperation::AccessType>,
    std::tuple< DVRFileOperation::RecordStatus, DVRFileOperation::EventType>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t>,
    std::tuple< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::RecordStatusDeployment_t, ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EventTypeDeployment_t>
> DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>::recordEventStatusRequestStubDispatcher(
    &DVRFileOperationStub::RecordEventStatusRequest,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::AccessTypeDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::RecordStatusDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::DVR_VIMS::DVRFileOperation_::EventTypeDeployment_t* >(nullptr)));

template <typename _Stub = ::v1::GREATWALL::DVR_VIMS::DVRFileOperationStub, typename... _Stubs>
class DVRFileOperationSomeIPStubAdapter
    : public DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>,
      public std::enable_shared_from_this< DVRFileOperationSomeIPStubAdapter<_Stub, _Stubs...>> {
public:
    DVRFileOperationSomeIPStubAdapter(const CommonAPI::SomeIP::Address &_address,
                                            const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
                                            const std::shared_ptr<CommonAPI::StubBase> &_stub)
        : CommonAPI::SomeIP::StubAdapter(_address, _connection),
          DVRFileOperationSomeIPStubAdapterInternal<_Stub, _Stubs...>(_address, _connection, _stub) {
    }
};

} // namespace DVR_VIMS
} // namespace GREATWALL
} // namespace v1

#endif // V1_GREATWALL_DVR_VIMS_DVR_File_Operation_SOMEIP_STUB_ADAPTER_HPP_
