/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202002200719.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_TBOX_T_Box_System_Functions_PROXY_BASE_HPP_
#define V1_GREATWALL_TBOX_T_Box_System_Functions_PROXY_BASE_HPP_

#include <v1/GREATWALL/TBOX/TBoxSystemFunctions.hpp>



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <cstdint>
#include <string>
#include <vector>

#include <CommonAPI/Attribute.hpp>
#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace TBOX {

class TBoxSystemFunctionsProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::ObservableReadonlyAttribute< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::DoubleGPSRawData> DoubleGPSDataAttribute;
    typedef CommonAPI::ObservableReadonlyAttribute< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSRawData> GPSDataAttribute;
    typedef CommonAPI::ObservableReadonlyAttribute< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSInfo> GPSFunctionAttribute;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeProcess
    > UpgradeProcessEvent;
    typedef CommonAPI::Event<
    > HeartbeatCheckEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResponse
    > TboxUpgradeEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::TBOXCorrection_RTCM32
    > TBOXCorrectionRTCMDataEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::QXRTCM_StatusCode
    > QXRTCM_StatusInfoEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResult
    > UpgradeResultEvent;

    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxSystemFunctions::TBoxDTCCode&)> TBoxDTCAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxSystemFunctions::SN&, const TBoxSystemFunctions::FW0&, const TBoxSystemFunctions::SW0&, const TBoxSystemFunctions::FW1&, const TBoxSystemFunctions::SW1&, const TBoxSystemFunctions::COMP1&, const TBoxSystemFunctions::COMP2&)> TBoxInfrastructureDataAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxSystemFunctions::TBoxResponse&, const TBoxSystemFunctions::TBoxAPN2Status&)> TBoxAPN2OperationAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxSystemFunctions::ConnectionInfo&)> TBoxLoggingDownloadAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxSystemFunctions::TBoxResponse&)> TBoxResetAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxSystemFunctions::TBoxAPN2Status&)> TBoxAPN2StatusAsyncCallback;

    virtual DoubleGPSDataAttribute& getDoubleGPSDataAttribute() = 0;
    virtual GPSDataAttribute& getGPSDataAttribute() = 0;
    virtual GPSFunctionAttribute& getGPSFunctionAttribute() = 0;

    virtual UpgradeProcessEvent& getUpgradeProcessEvent() = 0;
    virtual HeartbeatCheckEvent& getHeartbeatCheckEvent() = 0;
    virtual TboxUpgradeEvent& getTboxUpgradeEvent() = 0;
    virtual TBOXCorrectionRTCMDataEvent& getTBOXCorrectionRTCMDataEvent() = 0;
    virtual QXRTCM_StatusInfoEvent& getQXRTCM_StatusInfoEvent() = 0;
    virtual UpgradeResultEvent& getUpgradeResultEvent() = 0;

    virtual void TBoxDTC(CommonAPI::CallStatus &_internalCallStatus, TBoxSystemFunctions::TBoxDTCCode &_TBoxDTCCode, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> TBoxDTCAsync(TBoxDTCAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    /**
     * @invariant Fire And Forget
     */
    virtual void UpdateFileTransmit(const TBoxSystemFunctions::UpgradeComplete &_UpgradeComplete, CommonAPI::CallStatus &_internalCallStatus) = 0;
    /**
     * @invariant Fire And Forget
     */
    virtual void TboxUpgrade(const TBoxSystemFunctions::UpgradeRequst &_UpgradeRequst, CommonAPI::CallStatus &_internalCallStatus) = 0;
    virtual void TBoxInfrastructureData(CommonAPI::CallStatus &_internalCallStatus, TBoxSystemFunctions::SN &_SN, TBoxSystemFunctions::FW0 &_FW0, TBoxSystemFunctions::SW0 &_SW0, TBoxSystemFunctions::FW1 &_FW1, TBoxSystemFunctions::SW1 &_SW1, TBoxSystemFunctions::COMP1 &_COMP1, TBoxSystemFunctions::COMP2 &_COMP2, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> TBoxInfrastructureDataAsync(TBoxInfrastructureDataAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void TBoxAPN2Operation(const TBoxSystemFunctions::TBoxAPN2Operation &_TBoxAPN2Operation, CommonAPI::CallStatus &_internalCallStatus, TBoxSystemFunctions::TBoxResponse &_TBoxResponse, TBoxSystemFunctions::TBoxAPN2Status &_TBoxAPN2Status, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> TBoxAPN2OperationAsync(const TBoxSystemFunctions::TBoxAPN2Operation &_TBoxAPN2Operation, TBoxAPN2OperationAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void TBoxLoggingDownload(const TBoxSystemFunctions::LogDownloadCommand &_LogDownloadCommand, CommonAPI::CallStatus &_internalCallStatus, TBoxSystemFunctions::ConnectionInfo &_ConnectionInfo, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> TBoxLoggingDownloadAsync(const TBoxSystemFunctions::LogDownloadCommand &_LogDownloadCommand, TBoxLoggingDownloadAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void TBoxReset(const TBoxSystemFunctions::TBoxResetOption &_TBoxResetOption, CommonAPI::CallStatus &_internalCallStatus, TBoxSystemFunctions::TBoxResponse &_TBoxResponse, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> TBoxResetAsync(const TBoxSystemFunctions::TBoxResetOption &_TBoxResetOption, TBoxResetAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void TBoxAPN2Status(CommonAPI::CallStatus &_internalCallStatus, TBoxSystemFunctions::TBoxAPN2Status &_TBoxAPN2Status, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> TBoxAPN2StatusAsync(TBoxAPN2StatusAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
};

} // namespace TBOX
} // namespace GREATWALL
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_GREATWALL_TBOX_T_Box_System_Functions_PROXY_BASE_HPP_
