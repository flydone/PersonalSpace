/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202002200719.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_TBOX_T_Box_Telephony_STUB_DEFAULT_HPP_
#define V1_GREATWALL_TBOX_T_Box_Telephony_STUB_DEFAULT_HPP_


#include <CommonAPI/Export.hpp>

#include <v1/GREATWALL/TBOX/TBoxTelephonyStub.hpp>
#include <sstream>

# if defined(_MSC_VER)
#  if _MSC_VER >= 1300
/*
 * Diamond inheritance is used for the CommonAPI::Proxy base class.
 * The Microsoft compiler put warning (C4250) using a desired c++ feature: "Delegating to a sister class"
 * A powerful technique that arises from using virtual inheritance is to delegate a method from a class in another class
 * by using a common abstract base class. This is also called cross delegation.
 */
#    pragma warning( disable : 4250 )
#  endif
# endif

namespace v1 {
namespace GREATWALL {
namespace TBOX {

/**
 * Provides a default implementation for TBoxTelephonyStubRemoteEvent and
 * TBoxTelephonyStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class COMMONAPI_EXPORT_CLASS_EXPLICIT TBoxTelephonyStubDefault
    : public virtual TBoxTelephonyStub {
public:
    COMMONAPI_EXPORT TBoxTelephonyStubDefault();

    COMMONAPI_EXPORT TBoxTelephonyStubRemoteEvent* initStubAdapter(const std::shared_ptr< TBoxTelephonyStubAdapter> &_adapter);

    COMMONAPI_EXPORT const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    COMMONAPI_EXPORT virtual const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSimStatusStruct& getTBoxSimStatusAttribute();
    COMMONAPI_EXPORT virtual const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSimStatusStruct& getTBoxSimStatusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBoxSimStatusAttribute(::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSimStatusStruct _value);
    COMMONAPI_EXPORT virtual const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSignalStrengthStruct& getTBoxSignalStrengthAttribute();
    COMMONAPI_EXPORT virtual const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSignalStrengthStruct& getTBoxSignalStrengthAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBoxSignalStrengthAttribute(::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSignalStrengthStruct _value);
    COMMONAPI_EXPORT virtual const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxNetworkProviderStruct& getTBoxNetworkProviderAttribute();
    COMMONAPI_EXPORT virtual const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxNetworkProviderStruct& getTBoxNetworkProviderAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setTBoxNetworkProviderAttribute(::v1::GREATWALL::TBOX::TBoxTelephony::TBoxNetworkProviderStruct _value);

    COMMONAPI_EXPORT virtual void TBoxCallOperation(const std::shared_ptr<CommonAPI::ClientId> _client, TBoxTelephony::TBoxTelephoneNumber _TBoxTelephoneNumber, TBoxTelephony::TBoxCallType _TBoxCallType, TBoxTelephony::TBoxCallOperation _TBoxCallOperation, TBoxTelephony::long64 _TBoxCallID_In, TBoxCallOperationReply_t _reply);
    COMMONAPI_EXPORT virtual void TBoxSIMInfor(const std::shared_ptr<CommonAPI::ClientId> _client, TBoxSIMInforReply_t _reply);
    COMMONAPI_EXPORT virtual void TBoxStartCall(const std::shared_ptr<CommonAPI::ClientId> _client, TBoxTelephony::TBoxTelephoneNumber _TBoxTelephoneNumber, TBoxTelephony::TBoxCallType _TBoxCallType, TBoxTelephony::long64 _TBoxCallID_In, TBoxStartCallReply_t _reply);

    COMMONAPI_EXPORT virtual void fireTBoxCallStateEvent(const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxTelephoneNumber &_TBoxTelephoneNumber, const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxCallType &_TBoxCallType, const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxCallState &_TBoxCallState, const ::v1::GREATWALL::TBOX::TBoxTelephony::long64 &_TBoxCallID);

    
protected:
    COMMONAPI_EXPORT virtual bool trySetTBoxSimStatusAttribute(::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSimStatusStruct _value);
    COMMONAPI_EXPORT virtual bool validateTBoxSimStatusAttributeRequestedValue(const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSimStatusStruct &_value);
    COMMONAPI_EXPORT virtual bool trySetTBoxSignalStrengthAttribute(::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSignalStrengthStruct _value);
    COMMONAPI_EXPORT virtual bool validateTBoxSignalStrengthAttributeRequestedValue(const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSignalStrengthStruct &_value);
    COMMONAPI_EXPORT virtual bool trySetTBoxNetworkProviderAttribute(::v1::GREATWALL::TBOX::TBoxTelephony::TBoxNetworkProviderStruct _value);
    COMMONAPI_EXPORT virtual bool validateTBoxNetworkProviderAttributeRequestedValue(const ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxNetworkProviderStruct &_value);
    class COMMONAPI_EXPORT_CLASS_EXPLICIT RemoteEventHandler: public virtual TBoxTelephonyStubRemoteEvent {
    public:
        COMMONAPI_EXPORT RemoteEventHandler(TBoxTelephonyStubDefault *_defaultStub);





    private:
        TBoxTelephonyStubDefault *defaultStub_;
    };
protected:
    TBoxTelephonyStubDefault::RemoteEventHandler remoteEventHandler_;

private:

    ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSimStatusStruct tBoxSimStatusAttributeValue_ {};
    ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxSignalStrengthStruct tBoxSignalStrengthAttributeValue_ {};
    ::v1::GREATWALL::TBOX::TBoxTelephony::TBoxNetworkProviderStruct tBoxNetworkProviderAttributeValue_ {};

    CommonAPI::Version interfaceVersion_;
};

} // namespace TBOX
} // namespace GREATWALL
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_GREATWALL_TBOX_T_Box_Telephony_STUB_DEFAULT
