/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202002200719.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_TBOX_T_Box_V2_X_System_Functions_PROXY_BASE_HPP_
#define V1_GREATWALL_TBOX_T_Box_V2_X_System_Functions_PROXY_BASE_HPP_

#include <v1/GREATWALL/TBOX/TBoxV2XSystemFunctions.hpp>



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <cstdint>
#include <vector>

#include <CommonAPI/Attribute.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace TBOX {

class TBoxV2XSystemFunctionsProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::ObservableReadonlyAttribute< ::v1::GREATWALL::TBOX::TBoxV2XSystemFunctions::V2XStatus> V2XFunctionStatusAttribute;

    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxV2XSystemFunctions::V2XLOCKRespone&)> V2XLockSwitchAsyncCallback;

    virtual V2XFunctionStatusAttribute& getV2XFunctionStatusAttribute() = 0;


    virtual void V2XLockSwitch(const TBoxV2XSystemFunctions::V2XLOCKRequest &_V2XLOCKRequest, CommonAPI::CallStatus &_internalCallStatus, TBoxV2XSystemFunctions::V2XLOCKRespone &_V2XLOCKRespone, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> V2XLockSwitchAsync(const TBoxV2XSystemFunctions::V2XLOCKRequest &_V2XLOCKRequest, V2XLockSwitchAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
};

} // namespace TBOX
} // namespace GREATWALL
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_GREATWALL_TBOX_T_Box_V2_X_System_Functions_PROXY_BASE_HPP_
