/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v202002200807.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/GREATWALL/TBOX/TBoxReservationFunctionsSomeIPProxy.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace TBOX {

std::shared_ptr<CommonAPI::SomeIP::Proxy> createTBoxReservationFunctionsSomeIPProxy(
    const CommonAPI::SomeIP::Address &_address,
    const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection) {
    return std::make_shared< TBoxReservationFunctionsSomeIPProxy>(_address, _connection);
}

void initializeTBoxReservationFunctionsSomeIPProxy() {
    CommonAPI::SomeIP::AddressTranslator::get()->insert(
        "local:GREATWALL.TBOX.TBoxReservationFunctions:v1_0:TBoxReservationFunctions01",
        0x204, 0x1, 1, 0);
     CommonAPI::SomeIP::Factory::get()->registerProxyCreateMethod(
         TBoxReservationFunctions::getInterface(),
         &createTBoxReservationFunctionsSomeIPProxy);
}

INITIALIZER(registerTBoxReservationFunctionsSomeIPProxy) {
    CommonAPI::SomeIP::Factory::get()->registerInterface(initializeTBoxReservationFunctionsSomeIPProxy);
}

TBoxReservationFunctionsSomeIPProxy::TBoxReservationFunctionsSomeIPProxy(
    const CommonAPI::SomeIP::Address &_address,
    const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection)
        : CommonAPI::SomeIP::Proxy(_address, _connection )
,          localFOTAResPar_(*this, CommonAPI::SomeIP::method_id_t(0x1001), true, false, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::LocalFOTAResParStructDeployment),
          localChargeResPar_(*this, CommonAPI::SomeIP::method_id_t(0x1002), true, false, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::LocalChargeResParStructDeployment)
,          remoteFOTAReservation_(*this, 0x1, CommonAPI::SomeIP::event_id_t(0x8001), false, false, std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationOperationDeployment_t* >(nullptr), &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment)),
          remoteChargeReservation_(*this, 0x2, CommonAPI::SomeIP::event_id_t(0x8002), false, false, std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ChargModeDeployment_t* >(nullptr), &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::RepeatDeployment_t* >(nullptr), &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment))
    {
    }

    TBoxReservationFunctionsSomeIPProxy::LocalFOTAResParAttribute& TBoxReservationFunctionsSomeIPProxy::getLocalFOTAResParAttribute() {
        return localFOTAResPar_;
    }
    TBoxReservationFunctionsSomeIPProxy::LocalChargeResParAttribute& TBoxReservationFunctionsSomeIPProxy::getLocalChargeResParAttribute() {
        return localChargeResPar_;
    }

    TBoxReservationFunctionsSomeIPProxy::RemoteFOTAReservationEvent& TBoxReservationFunctionsSomeIPProxy::getRemoteFOTAReservationEvent() {
        return remoteFOTAReservation_;
    }
    TBoxReservationFunctionsSomeIPProxy::RemoteChargeReservationEvent& TBoxReservationFunctionsSomeIPProxy::getRemoteChargeReservationEvent() {
        return remoteChargeReservation_;
    }

        void TBoxReservationFunctionsSomeIPProxy::RemoteFOTAReservation(const TBoxReservationFunctions::ReservationACK &_ReservationACK, CommonAPI::CallStatus &_internalCallStatus) {
            CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t> deploy_ReservationACK(_ReservationACK, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t* >(nullptr));
            CommonAPI::SomeIP::ProxyHelper<
                CommonAPI::SomeIP::SerializableArguments<
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::ReservationACK,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t
                    >
                >,
                CommonAPI::SomeIP::SerializableArguments<
                >
            >::callMethod(
            *this,
            CommonAPI::SomeIP::method_id_t(0x2),
            true,
            false,
    deploy_ReservationACK,
    _internalCallStatus);
    }
        void TBoxReservationFunctionsSomeIPProxy::LocalChargeReservation(const TBoxReservationFunctions::ChargMode &_ChargMode, const TBoxReservationFunctions::TimeArray &_StartTime, const TBoxReservationFunctions::Repeat &_Repeat, const TBoxReservationFunctions::TimeArray &_EndTime, CommonAPI::CallStatus &_internalCallStatus, TBoxReservationFunctions::ReservationACK &_ReservationACK, const CommonAPI::CallInfo *_info) {
            CommonAPI::Deployable< TBoxReservationFunctions::ChargMode, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ChargModeDeployment_t> deploy_ChargMode(_ChargMode, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ChargModeDeployment_t* >(nullptr));
            CommonAPI::Deployable< TBoxReservationFunctions::TimeArray, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t> deploy_StartTime(_StartTime, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment);
            CommonAPI::Deployable< TBoxReservationFunctions::Repeat, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::RepeatDeployment_t> deploy_Repeat(_Repeat, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::RepeatDeployment_t* >(nullptr));
            CommonAPI::Deployable< TBoxReservationFunctions::TimeArray, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t> deploy_EndTime(_EndTime, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment);
            CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t> deploy_ReservationACK(static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t* >(nullptr));
            CommonAPI::SomeIP::ProxyHelper<
                CommonAPI::SomeIP::SerializableArguments<
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::ChargMode,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ChargModeDeployment_t
                    >,
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::TimeArray,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t
                    >,
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::Repeat,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::RepeatDeployment_t
                    >,
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::TimeArray,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t
                    >
                >,
                CommonAPI::SomeIP::SerializableArguments<
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::ReservationACK,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t
                    >
                >
            >::callMethodWithReply(
            *this,
            CommonAPI::SomeIP::method_id_t(0x3),
            true,
            false,
    (_info ? _info : &CommonAPI::SomeIP::defaultCallInfo),
    deploy_ChargMode, deploy_StartTime, deploy_Repeat, deploy_EndTime,
    _internalCallStatus,
    deploy_ReservationACK);
    _ReservationACK = deploy_ReservationACK.getValue();
    }
    std::future<CommonAPI::CallStatus> TBoxReservationFunctionsSomeIPProxy::LocalChargeReservationAsync(const TBoxReservationFunctions::ChargMode &_ChargMode, const TBoxReservationFunctions::TimeArray &_StartTime, const TBoxReservationFunctions::Repeat &_Repeat, const TBoxReservationFunctions::TimeArray &_EndTime, LocalChargeReservationAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable< TBoxReservationFunctions::ChargMode, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ChargModeDeployment_t> deploy_ChargMode(_ChargMode, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ChargModeDeployment_t* >(nullptr));
        CommonAPI::Deployable< TBoxReservationFunctions::TimeArray, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t> deploy_StartTime(_StartTime, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment);
        CommonAPI::Deployable< TBoxReservationFunctions::Repeat, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::RepeatDeployment_t> deploy_Repeat(_Repeat, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::RepeatDeployment_t* >(nullptr));
        CommonAPI::Deployable< TBoxReservationFunctions::TimeArray, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t> deploy_EndTime(_EndTime, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment);
        CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t> deploy_ReservationACK(static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t* >(nullptr));
        return CommonAPI::SomeIP::ProxyHelper<
            CommonAPI::SomeIP::SerializableArguments<
                CommonAPI::Deployable<
                    TBoxReservationFunctions::ChargMode,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ChargModeDeployment_t
                >,
                CommonAPI::Deployable<
                    TBoxReservationFunctions::TimeArray,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t
                >,
                CommonAPI::Deployable<
                    TBoxReservationFunctions::Repeat,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::RepeatDeployment_t
                >,
                CommonAPI::Deployable<
                    TBoxReservationFunctions::TimeArray,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t
                >
            >,
            CommonAPI::SomeIP::SerializableArguments<
                CommonAPI::Deployable<
                    TBoxReservationFunctions::ReservationACK,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t
                >
            >
        >::callMethodAsync(
            *this,
            CommonAPI::SomeIP::method_id_t(0x3),
            true,
            false,
            (_info ? _info : &CommonAPI::SomeIP::defaultCallInfo),
            deploy_ChargMode, deploy_StartTime, deploy_Repeat, deploy_EndTime,
            [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t > _ReservationACK) {
                if (_callback)
                    _callback(_internalCallStatus, _ReservationACK.getValue());
            },
            std::make_tuple(deploy_ReservationACK));
    }
        void TBoxReservationFunctionsSomeIPProxy::LocalFOTAReservation(const TBoxReservationFunctions::ReservationOperation &_ReservationOperation, const TBoxReservationFunctions::TimeArray &_UpdateTime, CommonAPI::CallStatus &_internalCallStatus, TBoxReservationFunctions::ReservationACK &_ReservationACK, const CommonAPI::CallInfo *_info) {
            CommonAPI::Deployable< TBoxReservationFunctions::ReservationOperation, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationOperationDeployment_t> deploy_ReservationOperation(_ReservationOperation, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationOperationDeployment_t* >(nullptr));
            CommonAPI::Deployable< TBoxReservationFunctions::TimeArray, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t> deploy_UpdateTime(_UpdateTime, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment);
            CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t> deploy_ReservationACK(static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t* >(nullptr));
            CommonAPI::SomeIP::ProxyHelper<
                CommonAPI::SomeIP::SerializableArguments<
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::ReservationOperation,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationOperationDeployment_t
                    >,
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::TimeArray,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t
                    >
                >,
                CommonAPI::SomeIP::SerializableArguments<
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::ReservationACK,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t
                    >
                >
            >::callMethodWithReply(
            *this,
            CommonAPI::SomeIP::method_id_t(0x1),
            true,
            false,
    (_info ? _info : &CommonAPI::SomeIP::defaultCallInfo),
    deploy_ReservationOperation, deploy_UpdateTime,
    _internalCallStatus,
    deploy_ReservationACK);
    _ReservationACK = deploy_ReservationACK.getValue();
    }
    std::future<CommonAPI::CallStatus> TBoxReservationFunctionsSomeIPProxy::LocalFOTAReservationAsync(const TBoxReservationFunctions::ReservationOperation &_ReservationOperation, const TBoxReservationFunctions::TimeArray &_UpdateTime, LocalFOTAReservationAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable< TBoxReservationFunctions::ReservationOperation, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationOperationDeployment_t> deploy_ReservationOperation(_ReservationOperation, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationOperationDeployment_t* >(nullptr));
        CommonAPI::Deployable< TBoxReservationFunctions::TimeArray, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t> deploy_UpdateTime(_UpdateTime, &::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment);
        CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t> deploy_ReservationACK(static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t* >(nullptr));
        return CommonAPI::SomeIP::ProxyHelper<
            CommonAPI::SomeIP::SerializableArguments<
                CommonAPI::Deployable<
                    TBoxReservationFunctions::ReservationOperation,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationOperationDeployment_t
                >,
                CommonAPI::Deployable<
                    TBoxReservationFunctions::TimeArray,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::TimeArrayDeployment_t
                >
            >,
            CommonAPI::SomeIP::SerializableArguments<
                CommonAPI::Deployable<
                    TBoxReservationFunctions::ReservationACK,
                    ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t
                >
            >
        >::callMethodAsync(
            *this,
            CommonAPI::SomeIP::method_id_t(0x1),
            true,
            false,
            (_info ? _info : &CommonAPI::SomeIP::defaultCallInfo),
            deploy_ReservationOperation, deploy_UpdateTime,
            [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t > _ReservationACK) {
                if (_callback)
                    _callback(_internalCallStatus, _ReservationACK.getValue());
            },
            std::make_tuple(deploy_ReservationACK));
    }
        void TBoxReservationFunctionsSomeIPProxy::RemoteChargeReservation(const TBoxReservationFunctions::ReservationACK &_ReservationACK, CommonAPI::CallStatus &_internalCallStatus) {
            CommonAPI::Deployable< TBoxReservationFunctions::ReservationACK, ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t> deploy_ReservationACK(_ReservationACK, static_cast< ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t* >(nullptr));
            CommonAPI::SomeIP::ProxyHelper<
                CommonAPI::SomeIP::SerializableArguments<
                    CommonAPI::Deployable<
                        TBoxReservationFunctions::ReservationACK,
                        ::v1::GREATWALL::TBOX::TBoxReservationFunctions_::ReservationACKDeployment_t
                    >
                >,
                CommonAPI::SomeIP::SerializableArguments<
                >
            >::callMethod(
            *this,
            CommonAPI::SomeIP::method_id_t(0x4),
            true,
            false,
    deploy_ReservationACK,
    _internalCallStatus);
    }



    void TBoxReservationFunctionsSomeIPProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
    ownVersionMajor = 1;
    ownVersionMinor = 0;
    }

} // namespace TBOX
} // namespace GREATWALL
} // namespace v1
