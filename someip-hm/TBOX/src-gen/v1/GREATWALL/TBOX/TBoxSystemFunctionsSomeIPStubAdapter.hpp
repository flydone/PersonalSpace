/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.someip 3.1.12.v202002200807.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_TBOX_T_BOX_SYSTEM_FUNCTIONS_SOMEIP_STUB_ADAPTER_HPP_
#define V1_GREATWALL_TBOX_T_BOX_SYSTEM_FUNCTIONS_SOMEIP_STUB_ADAPTER_HPP_

#include <v1/GREATWALL/TBOX/TBoxSystemFunctionsStub.hpp>
#include <v1/GREATWALL/TBOX/TBoxSystemFunctionsSomeIPDeployment.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>
#include <CommonAPI/SomeIP/StubAdapterHelper.hpp>
#include <CommonAPI/SomeIP/StubAdapter.hpp>
#include <CommonAPI/SomeIP/Factory.hpp>
#include <CommonAPI/SomeIP/Types.hpp>
#include <CommonAPI/SomeIP/Constants.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace TBOX {

template <typename _Stub = ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub, typename... _Stubs>
class TBoxSystemFunctionsSomeIPStubAdapterInternal
    : public virtual TBoxSystemFunctionsStubAdapter,
      public CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...>
{
public:
    typedef CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...> TBoxSystemFunctionsSomeIPStubAdapterHelper;

    ~TBoxSystemFunctionsSomeIPStubAdapterInternal() {
        deactivateManagedInstances();
        TBoxSystemFunctionsSomeIPStubAdapterHelper::deinit();
    }

    void fireDoubleGPSDataAttributeChanged(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::DoubleGPSRawData& value);

    void fireGPSDataAttributeChanged(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSRawData& value);

    void fireGPSFunctionAttributeChanged(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSInfo& value);

    void fireUpgradeProcessEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeProcess& UpgradeProcess);

    void fireHeartbeatCheckEvent();

    void fireTboxUpgradeEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResponse& UpgradeResponse);

    void fireTBOXCorrectionRTCMDataEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::TBOXCorrection_RTCM32& TBOXCorrection_RTCM32);

    void fireQXRTCM_StatusInfoEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::QXRTCM_StatusCode& QXRTCM_StatusCode);

    void fireUpgradeResultEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResult& UpgradeResult);

    void deactivateManagedInstances() {
    }

    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        CommonAPI::Version
    > getTBoxSystemFunctionsInterfaceVersionStubDispatcher;

    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::DoubleGPSRawData,
        CommonAPI::SomeIP::StringDeployment
    > getDoubleGPSDataAttributeStubDispatcher;
    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSRawData,
        CommonAPI::SomeIP::StringDeployment
    > getGPSDataAttributeStubDispatcher;
    static CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSInfo,
        CommonAPI::SomeIP::StringDeployment
    > getGPSFunctionAttributeStubDispatcher;

    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< >,
        std::tuple< TBoxSystemFunctions::TBoxDTCCode>,
        std::tuple< >,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxDTCCodeDeployment_t>
    > tBoxDTCStubDispatcher;
    static CommonAPI::SomeIP::MethodStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< TBoxSystemFunctions::UpgradeComplete>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeCompleteDeployment_t>
    > updateFileTransmitStubDispatcher;
    static CommonAPI::SomeIP::MethodStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< TBoxSystemFunctions::UpgradeRequst>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeRequstDeployment_t>
    > tboxUpgradeStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< >,
        std::tuple< TBoxSystemFunctions::SN, TBoxSystemFunctions::FW0, TBoxSystemFunctions::SW0, TBoxSystemFunctions::FW1, TBoxSystemFunctions::SW1, TBoxSystemFunctions::COMP1, TBoxSystemFunctions::COMP2>,
        std::tuple< >,
        std::tuple< CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment>
    > tBoxInfrastructureDataStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< TBoxSystemFunctions::TBoxAPN2Operation>,
        std::tuple< TBoxSystemFunctions::TBoxResponse, TBoxSystemFunctions::TBoxAPN2Status>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2OperationDeployment_t>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResponseDeployment_t, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2StatusDeployment_t>
    > tBoxAPN2OperationStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< TBoxSystemFunctions::LogDownloadCommand>,
        std::tuple< TBoxSystemFunctions::ConnectionInfo>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::LogDownloadCommandDeployment_t>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::ConnectionInfoDeployment_t>
    > tBoxLoggingDownloadStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< TBoxSystemFunctions::TBoxResetOption>,
        std::tuple< TBoxSystemFunctions::TBoxResponse>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResetOptionDeployment_t>,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResponseDeployment_t>
    > tBoxResetStubDispatcher;
    
    static CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
        std::tuple< >,
        std::tuple< TBoxSystemFunctions::TBoxAPN2Status>,
        std::tuple< >,
        std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2StatusDeployment_t>
    > tBoxAPN2StatusStubDispatcher;

    TBoxSystemFunctionsSomeIPStubAdapterInternal(
        const CommonAPI::SomeIP::Address &_address,
        const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub):
        CommonAPI::SomeIP::StubAdapter(_address, _connection),
        TBoxSystemFunctionsSomeIPStubAdapterHelper(
            _address,
            _connection,
            std::dynamic_pointer_cast< TBoxSystemFunctionsStub>(_stub))
    {

                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x1003) }, &getDoubleGPSDataAttributeStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x1001) }, &getGPSDataAttributeStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x0) }, &getGPSFunctionAttributeStubDispatcher );
        
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x3) }, &tBoxDTCStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x1002) }, &updateFileTransmitStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x7) }, &tboxUpgradeStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x2) }, &tBoxInfrastructureDataStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x5) }, &tBoxAPN2OperationStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x1) }, &tBoxLoggingDownloadStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x6) }, &tBoxResetStubDispatcher );
                TBoxSystemFunctionsSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x4) }, &tBoxAPN2StatusStubDispatcher );






        std::shared_ptr<CommonAPI::SomeIP::ClientId> clientId = std::make_shared<CommonAPI::SomeIP::ClientId>(0xFFFF);

        // Provided events/fields
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(0x3));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x8002), itsEventGroups, false);
        }
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(0x2));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x8001), itsEventGroups, false);
        }
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(0x3));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x8004), itsEventGroups, false);
        }
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(0x5));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x8005), itsEventGroups, false);
        }
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(0x6));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x8006), itsEventGroups, false);
        }
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(0x3));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x8003), itsEventGroups, false);
        }
        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(CommonAPI::SomeIP::eventgroup_id_t(0x4)));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x9002), itsEventGroups, true);
            fireDoubleGPSDataAttributeChanged(std::dynamic_pointer_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub>(_stub)->getDoubleGPSDataAttribute(clientId));
        }

        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(CommonAPI::SomeIP::eventgroup_id_t(0x1)));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x9001), itsEventGroups, true);
            fireGPSDataAttributeChanged(std::dynamic_pointer_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub>(_stub)->getGPSDataAttribute(clientId));
        }

        {
            std::set<CommonAPI::SomeIP::eventgroup_id_t> itsEventGroups;
            itsEventGroups.insert(CommonAPI::SomeIP::eventgroup_id_t(CommonAPI::SomeIP::eventgroup_id_t(0x7)));
            CommonAPI::SomeIP::StubAdapter::registerEvent(CommonAPI::SomeIP::event_id_t(0x9003), itsEventGroups, true);
            fireGPSFunctionAttributeChanged(std::dynamic_pointer_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub>(_stub)->getGPSFunctionAttribute(clientId));
        }

    }

private:
};

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    CommonAPI::Version
    > TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::getTBoxSystemFunctionsInterfaceVersionStubDispatcher(&TBoxSystemFunctionsStub::lockInterfaceVersionAttribute, &TBoxSystemFunctionsStub::getInterfaceVersion, false);

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    ::v1::GREATWALL::TBOX::TBoxSystemFunctions::DoubleGPSRawData,
    CommonAPI::SomeIP::StringDeployment
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::getDoubleGPSDataAttributeStubDispatcher(
    &TBoxSystemFunctionsStub::lockDoubleGPSDataAttribute,
    &TBoxSystemFunctionsStub::getDoubleGPSDataAttribute, false);

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSRawData,
    CommonAPI::SomeIP::StringDeployment
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::getGPSDataAttributeStubDispatcher(
    &TBoxSystemFunctionsStub::lockGPSDataAttribute,
    &TBoxSystemFunctionsStub::getGPSDataAttribute, false);

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::GetAttributeStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSInfo,
    CommonAPI::SomeIP::StringDeployment
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::getGPSFunctionAttributeStubDispatcher(
    &TBoxSystemFunctionsStub::lockGPSFunctionAttribute,
    &TBoxSystemFunctionsStub::getGPSFunctionAttribute, false);

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< >,
    std::tuple< TBoxSystemFunctions::TBoxDTCCode>,
    std::tuple< >,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxDTCCodeDeployment_t>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::tBoxDTCStubDispatcher(
    &TBoxSystemFunctionsStub::TBoxDTC,
    false,
    std::make_tuple(),
    std::make_tuple(&::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxDTCCodeDeployment));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< TBoxSystemFunctions::UpgradeComplete>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeCompleteDeployment_t>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::updateFileTransmitStubDispatcher(
    &TBoxSystemFunctionsStub::UpdateFileTransmit,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeCompleteDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< TBoxSystemFunctions::UpgradeRequst>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeRequstDeployment_t>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::tboxUpgradeStubDispatcher(
    &TBoxSystemFunctionsStub::TboxUpgrade,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeRequstDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< >,
    std::tuple< TBoxSystemFunctions::SN, TBoxSystemFunctions::FW0, TBoxSystemFunctions::SW0, TBoxSystemFunctions::FW1, TBoxSystemFunctions::SW1, TBoxSystemFunctions::COMP1, TBoxSystemFunctions::COMP2>,
    std::tuple< >,
    std::tuple< CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment, CommonAPI::SomeIP::StringDeployment>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::tBoxInfrastructureDataStubDispatcher(
    &TBoxSystemFunctionsStub::TBoxInfrastructureData,
    false,
    std::make_tuple(),
    std::make_tuple(&::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxInfrastructureData_SNDeployment, &::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxInfrastructureData_FW0Deployment, &::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxInfrastructureData_SW0Deployment, &::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxInfrastructureData_FW1Deployment, &::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxInfrastructureData_SW1Deployment, &::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxInfrastructureData_COMP1Deployment, &::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxInfrastructureData_COMP2Deployment));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< TBoxSystemFunctions::TBoxAPN2Operation>,
    std::tuple< TBoxSystemFunctions::TBoxResponse, TBoxSystemFunctions::TBoxAPN2Status>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2OperationDeployment_t>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResponseDeployment_t, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2StatusDeployment_t>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::tBoxAPN2OperationStubDispatcher(
    &TBoxSystemFunctionsStub::TBoxAPN2Operation,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2OperationDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResponseDeployment_t* >(nullptr), static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2StatusDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< TBoxSystemFunctions::LogDownloadCommand>,
    std::tuple< TBoxSystemFunctions::ConnectionInfo>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::LogDownloadCommandDeployment_t>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::ConnectionInfoDeployment_t>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::tBoxLoggingDownloadStubDispatcher(
    &TBoxSystemFunctionsStub::TBoxLoggingDownload,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::LogDownloadCommandDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::ConnectionInfoDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< TBoxSystemFunctions::TBoxResetOption>,
    std::tuple< TBoxSystemFunctions::TBoxResponse>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResetOptionDeployment_t>,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResponseDeployment_t>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::tBoxResetStubDispatcher(
    &TBoxSystemFunctionsStub::TBoxReset,
    false,
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResetOptionDeployment_t* >(nullptr)),
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxResponseDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
    ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub,
    std::tuple< >,
    std::tuple< TBoxSystemFunctions::TBoxAPN2Status>,
    std::tuple< >,
    std::tuple< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2StatusDeployment_t>
> TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::tBoxAPN2StatusStubDispatcher(
    &TBoxSystemFunctionsStub::TBoxAPN2Status,
    false,
    std::make_tuple(),
    std::make_tuple(static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBoxAPN2StatusDeployment_t* >(nullptr)));

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireDoubleGPSDataAttributeChanged(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::DoubleGPSRawData& value) {
    CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::DoubleGPSRawData, CommonAPI::SomeIP::StringDeployment> deployedValue(value, static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<
        CommonAPI::SomeIP::SerializableArguments<
            CommonAPI::Deployable<
                ::v1::GREATWALL::TBOX::TBoxSystemFunctions::DoubleGPSRawData,
                CommonAPI::SomeIP::StringDeployment
            >
            >
    >::sendEvent(
        *this,
        CommonAPI::SomeIP::event_id_t(0x9002),
        false,
        deployedValue
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireGPSDataAttributeChanged(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSRawData& value) {
    CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSRawData, CommonAPI::SomeIP::StringDeployment> deployedValue(value, static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<
        CommonAPI::SomeIP::SerializableArguments<
            CommonAPI::Deployable<
                ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSRawData,
                CommonAPI::SomeIP::StringDeployment
            >
            >
    >::sendEvent(
        *this,
        CommonAPI::SomeIP::event_id_t(0x9001),
        false,
        deployedValue
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireGPSFunctionAttributeChanged(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSInfo& value) {
    CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSInfo, CommonAPI::SomeIP::StringDeployment> deployedValue(value, static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<
        CommonAPI::SomeIP::SerializableArguments<
            CommonAPI::Deployable<
                ::v1::GREATWALL::TBOX::TBoxSystemFunctions::GPSInfo,
                CommonAPI::SomeIP::StringDeployment
            >
            >
    >::sendEvent(
        *this,
        CommonAPI::SomeIP::event_id_t(0x9003),
        false,
        deployedValue
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireUpgradeProcessEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeProcess& _UpgradeProcess) {
    CommonAPI::Deployable< TBoxSystemFunctions::UpgradeProcess, CommonAPI::SomeIP::IntegerDeployment<uint8_t>> deployed_UpgradeProcess(_UpgradeProcess, static_cast< CommonAPI::SomeIP::IntegerDeployment<uint8_t>* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<CommonAPI::SomeIP::SerializableArguments<  CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeProcess, CommonAPI::SomeIP::IntegerDeployment<uint8_t> > 
    >>
        ::sendEvent(
            *this,
            CommonAPI::SomeIP::event_id_t(0x8002),
            false,
             deployed_UpgradeProcess 
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireHeartbeatCheckEvent() {
    CommonAPI::SomeIP::StubEventHelper<CommonAPI::SomeIP::SerializableArguments< >>
        ::sendEvent(
            *this,
            CommonAPI::SomeIP::event_id_t(0x8001),
            false
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireTboxUpgradeEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResponse& _UpgradeResponse) {
    CommonAPI::Deployable< TBoxSystemFunctions::UpgradeResponse, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeResponseDeployment_t> deployed_UpgradeResponse(_UpgradeResponse, static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeResponseDeployment_t* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<CommonAPI::SomeIP::SerializableArguments<  CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResponse, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeResponseDeployment_t > 
    >>
        ::sendEvent(
            *this,
            CommonAPI::SomeIP::event_id_t(0x8004),
            false,
             deployed_UpgradeResponse 
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireTBOXCorrectionRTCMDataEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::TBOXCorrection_RTCM32& _TBOXCorrection_RTCM32) {
    CommonAPI::Deployable< TBoxSystemFunctions::TBOXCorrection_RTCM32, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBOXCorrection_RTCM32Deployment_t> deployed_TBOXCorrection_RTCM32(_TBOXCorrection_RTCM32, static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBOXCorrection_RTCM32Deployment_t* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<CommonAPI::SomeIP::SerializableArguments<  CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::TBOXCorrection_RTCM32, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::TBOXCorrection_RTCM32Deployment_t > 
    >>
        ::sendEvent(
            *this,
            CommonAPI::SomeIP::event_id_t(0x8005),
            false,
             deployed_TBOXCorrection_RTCM32 
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireQXRTCM_StatusInfoEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::QXRTCM_StatusCode& _QXRTCM_StatusCode) {
    CommonAPI::Deployable< TBoxSystemFunctions::QXRTCM_StatusCode, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::QXRTCM_StatusCodeDeployment_t> deployed_QXRTCM_StatusCode(_QXRTCM_StatusCode, static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::QXRTCM_StatusCodeDeployment_t* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<CommonAPI::SomeIP::SerializableArguments<  CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::QXRTCM_StatusCode, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::QXRTCM_StatusCodeDeployment_t > 
    >>
        ::sendEvent(
            *this,
            CommonAPI::SomeIP::event_id_t(0x8006),
            false,
             deployed_QXRTCM_StatusCode 
    );
}

template <typename _Stub, typename... _Stubs>
void TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>::fireUpgradeResultEvent(const ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResult& _UpgradeResult) {
    CommonAPI::Deployable< TBoxSystemFunctions::UpgradeResult, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeResultDeployment_t> deployed_UpgradeResult(_UpgradeResult, static_cast< ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeResultDeployment_t* >(nullptr));
    CommonAPI::SomeIP::StubEventHelper<CommonAPI::SomeIP::SerializableArguments<  CommonAPI::Deployable< ::v1::GREATWALL::TBOX::TBoxSystemFunctions::UpgradeResult, ::v1::GREATWALL::TBOX::TBoxSystemFunctions_::UpgradeResultDeployment_t > 
    >>
        ::sendEvent(
            *this,
            CommonAPI::SomeIP::event_id_t(0x8003),
            false,
             deployed_UpgradeResult 
    );
}

template <typename _Stub = ::v1::GREATWALL::TBOX::TBoxSystemFunctionsStub, typename... _Stubs>
class TBoxSystemFunctionsSomeIPStubAdapter
    : public TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>,
      public std::enable_shared_from_this< TBoxSystemFunctionsSomeIPStubAdapter<_Stub, _Stubs...>> {
public:
    TBoxSystemFunctionsSomeIPStubAdapter(const CommonAPI::SomeIP::Address &_address,
                                            const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
                                            const std::shared_ptr<CommonAPI::StubBase> &_stub)
        : CommonAPI::SomeIP::StubAdapter(_address, _connection),
          TBoxSystemFunctionsSomeIPStubAdapterInternal<_Stub, _Stubs...>(_address, _connection, _stub) {
    }
};

} // namespace TBOX
} // namespace GREATWALL
} // namespace v1

#endif // V1_GREATWALL_TBOX_T_Box_System_Functions_SOMEIP_STUB_ADAPTER_HPP_
