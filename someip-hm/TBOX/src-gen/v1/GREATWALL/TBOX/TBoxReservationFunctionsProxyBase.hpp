/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v202002200719.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GREATWALL_TBOX_T_Box_Reservation_Functions_PROXY_BASE_HPP_
#define V1_GREATWALL_TBOX_T_Box_Reservation_Functions_PROXY_BASE_HPP_

#include <v1/GREATWALL/TBOX/TBoxReservationFunctions.hpp>



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <vector>

#include <CommonAPI/Attribute.hpp>
#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace GREATWALL {
namespace TBOX {

class TBoxReservationFunctionsProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::ReadonlyAttribute< ::v1::GREATWALL::TBOX::TBoxReservationFunctions::LocalFOTAResParStruct> LocalFOTAResParAttribute;
    typedef CommonAPI::ReadonlyAttribute< ::v1::GREATWALL::TBOX::TBoxReservationFunctions::LocalChargeResParStruct> LocalChargeResParAttribute;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxReservationFunctions::ReservationOperation, ::v1::GREATWALL::TBOX::TBoxReservationFunctions::TimeArray
    > RemoteFOTAReservationEvent;
    typedef CommonAPI::Event<
        ::v1::GREATWALL::TBOX::TBoxReservationFunctions::ChargMode, ::v1::GREATWALL::TBOX::TBoxReservationFunctions::TimeArray, ::v1::GREATWALL::TBOX::TBoxReservationFunctions::Repeat, ::v1::GREATWALL::TBOX::TBoxReservationFunctions::TimeArray
    > RemoteChargeReservationEvent;

    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxReservationFunctions::ReservationACK&)> LocalChargeReservationAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&, const TBoxReservationFunctions::ReservationACK&)> LocalFOTAReservationAsyncCallback;

    virtual LocalFOTAResParAttribute& getLocalFOTAResParAttribute() = 0;
    virtual LocalChargeResParAttribute& getLocalChargeResParAttribute() = 0;

    virtual RemoteFOTAReservationEvent& getRemoteFOTAReservationEvent() = 0;
    virtual RemoteChargeReservationEvent& getRemoteChargeReservationEvent() = 0;

    /**
     * @invariant Fire And Forget
     */
    virtual void RemoteFOTAReservation(const TBoxReservationFunctions::ReservationACK &_ReservationACK, CommonAPI::CallStatus &_internalCallStatus) = 0;
    virtual void LocalChargeReservation(const TBoxReservationFunctions::ChargMode &_ChargMode, const TBoxReservationFunctions::TimeArray &_StartTime, const TBoxReservationFunctions::Repeat &_Repeat, const TBoxReservationFunctions::TimeArray &_EndTime, CommonAPI::CallStatus &_internalCallStatus, TBoxReservationFunctions::ReservationACK &_ReservationACK, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> LocalChargeReservationAsync(const TBoxReservationFunctions::ChargMode &_ChargMode, const TBoxReservationFunctions::TimeArray &_StartTime, const TBoxReservationFunctions::Repeat &_Repeat, const TBoxReservationFunctions::TimeArray &_EndTime, LocalChargeReservationAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void LocalFOTAReservation(const TBoxReservationFunctions::ReservationOperation &_ReservationOperation, const TBoxReservationFunctions::TimeArray &_UpdateTime, CommonAPI::CallStatus &_internalCallStatus, TBoxReservationFunctions::ReservationACK &_ReservationACK, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> LocalFOTAReservationAsync(const TBoxReservationFunctions::ReservationOperation &_ReservationOperation, const TBoxReservationFunctions::TimeArray &_UpdateTime, LocalFOTAReservationAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    /**
     * @invariant Fire And Forget
     */
    virtual void RemoteChargeReservation(const TBoxReservationFunctions::ReservationACK &_ReservationACK, CommonAPI::CallStatus &_internalCallStatus) = 0;
};

} // namespace TBOX
} // namespace GREATWALL
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_GREATWALL_TBOX_T_Box_Reservation_Functions_PROXY_BASE_HPP_
